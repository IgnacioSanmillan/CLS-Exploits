.386
.model flat, stdcall
option casemap :none

;include \masm32\include\masm32.inc
;include \masm32\include\kernel32.inc

;include \masm32\macros\macros.asm
;includelib \masm32\lib\masm32.lib
;includelib \masm32\lib\kernel32.lib


assume fs:nothing  

.code
start:
       push ebp
       mov ebp, esp
       sub esp, 8h
       push ebx
       push esi
       push edi
       call get_delta_offset ; Get the delta offset
 
get_delta_offset:
    pop ebx
    sub ebp,get_delta_offset
       
       push 30h
       pop ecx
       mov eax, fs:[ecx]
       mov eax,[eax+0ch]
       mov eax,[eax+014h]
       mov eax,[eax]
       mov eax,[eax]
       mov eax,[eax+10h]
       mov [ebp-4], eax  
       
       add eax, [eax+3ch]
       mov eax, [eax+78h]
       add eax, [ebp-4]
       mov [ebp-8], eax
       
       xor esi, esi
       mov edx, [eax+20h]
       add edx, [ebp-4]
    
    iter:
        push esi
        mov ecx, 65535
        sub ecx, 65528
        mov esi, [edx + esi *4]
        add esi, [ebp-4]
        lea edi, [win+ebx]
        repe cmpsb
        je l_end
        pop esi
        inc esi
        cmp esi, [eax+14h]
        jl iter
        jmp quit
    
     l_end:
        pop esi
        mov ecx, [eax+1ch]
        add ecx, [ebp-4]
        mov edx, [eax+24h]
        add edx, [ebp-4]
        movzx eax, word ptr [edx+esi*2]
        mov eax, [ecx+eax*4]
        add eax, [ebp-4]
        push 636c6163h
        push esp
        mov [10104110h], esp
        push 10104110h
        call eax
        
       
     quit:
       pop edi
       pop esi
       pop ebx
       leave
       ret
       win db "WinExec",0
       
end start